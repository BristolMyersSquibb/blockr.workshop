[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About us",
    "section": "",
    "text": "Karma Tarap (BMS)\n\nKarma Tarap is an Innovation Strategy and Solutions Lead at Bristol Myers Squibb, bringing over a decade of experience as a statistical programmer in the pharmaceutical industry. With degrees in immunology, microbiology, bioinformatics, and data science. His work focuses on integrating advanced data analytics with insights to accelerate innovation and improve patient outcomes. Additionally, Karma has led multiple introductory R workshops within the industry.\n\n\nJohn Coene (The Y Company)\n\nJohn is a senior developer and data analytics professional with 9 years of working experience. He is the founder and co-founder of Opifex and The Y company. He is an expert in the R/JavaScript and Go languages and has developed hundreds of R packages. John has given numerous talks and workshops, at WhyR, eRum, as a guest on the Shiny dev series podcast discussing user experience, and R in Pharma. John is also the author of the book JavaScript for R published by CRC Press as part of the R series.\n\n\nDavid Granjon (cynkra)\n\nDavid is lead Shiny developer at cynkra and holds a Ph.D.¬†in applied mathematics from Universit√© Pierre et Marie Curie and Universit√© de Lausanne. He is the founder of the open source Interface organization, where he develops Shiny extensions, writes books and delivers advanced Shiny workshops from Posit Conf to R in Pharma. David worked 5 years in the pharma industry where he helped design production-ready Shiny apps.\n\n\nAknowledgement\nWorkshop authors want to warmly thank Nicolas Bennett, Mike Page and Christoph Sax for their involvment in the blockr core development team."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blockr.workshop",
    "section": "",
    "text": "Despite widespread adoption of tools such as Shiny and dplyr, creating dashboards in R remains challenging for non-coding developers. Solutions like PowerBI or Tableau, while popular, are proprietary and expensive, offer limited reproducibility, and have restricted integration with the R ecosystem. To address this gap, we introduce blockr, an open-source dashboard builder (https://github.com/blockr-org). blockr simplifies the construction of parameterised data pipelines as a web application, enabling collaboration and easy sharing of results through self-contained code generation. We emphasize modularity by decomposing pipelines into ‚Äòblocks‚Äô. These ‚Äòblocks‚Äô can be assembled into ‚Äòstacks‚Äô, which can be connected so that the output of one stack serves as the input for others. This architecture results in a reactive dashboard that allows upstream changes to cascade through the analysis, providing instant feedback to the user. General-purpose blocks provided by blockr can be combined with user-created blocks to expand functionality to use-case specific needs. This approach makes it easy to leverage the vast and mature ecosystem of R packages."
  },
  {
    "objectID": "index.html#detailed-schedule",
    "href": "index.html#detailed-schedule",
    "title": "blockr.workshop",
    "section": "Detailed schedule",
    "text": "Detailed schedule\n\nIntroduction to blockr (1h30):\n\nData analysis is like cooking!\nDefinition of fields (ingredients), blocks (instructions), stack (cooking recipie), workspace (dinner party).\nExercise: create your first stack interactively: some data + plots.\nExercise: Use the previously created stack and connect it to anothe within the workspace.\n\nYour first new block (1h30):\n\nIntro about blocks constructors: new_block.\nExercise: Develop a clinical table block.\nIntroduction to the registry, the blocks ‚Äúsupermarket‚Äù.\nExercise: use the registry to expose this block to the outside world.\nLeverage S3 to customise part of the UI/server.\nExercise: Add a new render method to display interactive tables."
  },
  {
    "objectID": "slides/0-welcome/welcome.html#before-we-start",
    "href": "slides/0-welcome/welcome.html#before-we-start",
    "title": "Introduction",
    "section": "Before we start",
    "text": "Before we start\n\nLink to Posit Cloud: TBD\n‚Ä¶"
  },
  {
    "objectID": "slides/0-welcome/welcome.html#workshop-pre-requisites",
    "href": "slides/0-welcome/welcome.html#workshop-pre-requisites",
    "title": "Introduction",
    "section": "Workshop pre-requisites",
    "text": "Workshop pre-requisites\n\nYou are interested into data analysis.\nYou are an R user.\nYou are an R developer with package development knowledge."
  },
  {
    "objectID": "slides/0-welcome/welcome.html#karma",
    "href": "slides/0-welcome/welcome.html#karma",
    "title": "Introduction",
    "section": "Karma",
    "text": "Karma\n\n\nKarma is an Innovation Strategy and Solutions Lead at Bristol Myers Squibb."
  },
  {
    "objectID": "slides/0-welcome/welcome.html#john",
    "href": "slides/0-welcome/welcome.html#john",
    "title": "Introduction",
    "section": "John",
    "text": "John\n\n\nJohn is senior R/JS/Go developer and founder/co-founder of Opifex and The Y company."
  },
  {
    "objectID": "slides/0-welcome/welcome.html#david-granjon",
    "href": "slides/0-welcome/welcome.html#david-granjon",
    "title": "Introduction",
    "section": "David Granjon",
    "text": "David Granjon\n\n\nDavid works as a Lead Shiny Developer at Cynkra and founder of the open source RinteRface organisation."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#developing-enterprise-grade-dashboards-isnt-easy",
    "href": "slides/1-blockr-user/blockr-user.html#developing-enterprise-grade-dashboards-isnt-easy",
    "title": "Introduction to blockr for users",
    "section": "Developing enterprise-grade dashboards isn‚Äôt easy",
    "text": "Developing enterprise-grade dashboards isn‚Äôt easy"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#introducing-blockr",
    "href": "slides/1-blockr-user/blockr-user.html#introducing-blockr",
    "title": "Introduction to blockr for users",
    "section": "üí° Introducing {blockr}",
    "text": "üí° Introducing {blockr}\n\n\n‚ÄúShiny‚Äôs WordPress‚Äù (John Coene, 2024)\n\n\n\n\n\n\n\n\n\n\nSupermarket for data analysis with R.\n\nNo-Code dashboard builder ‚Ä¶\n‚Ä¶ Extendable by developers.\n\nCollaborative tool.\n\nReproducible code."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#palmer-penguins-plot",
    "href": "slides/1-blockr-user/blockr-user.html#palmer-penguins-plot",
    "title": "Introduction to blockr for users",
    "section": "Palmer penguins plot",
    "text": "Palmer penguins plot\n\nWhat penguin species has the largest flippers?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow can I produce this plot?\n\n\n\n\nShould I ask my colleagues to develop an interactive app for this?"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#the-stack-a-data-analysis-recipe",
    "href": "slides/1-blockr-user/blockr-user.html#the-stack-a-data-analysis-recipe",
    "title": "Introduction to blockr for users",
    "section": "The stack: a data analysis recipe",
    "text": "The stack: a data analysis recipe\n\n\n\n\n\n\n\n\n\nStack\n\n\ndata\n\n\ndata\n\n\nBlock 1\n\n\nData: dataset, browser, ‚Ä¶\n\n\nBlock 2\n\n\nTransform block: filter, select ‚Ä¶\n\n\nBlock 3\n\n\nResult/transform: plot, filter, ‚Ä¶\n\n\n\n\n\n\n\n\nCollection of instructions, blocks, from data import to wrangling/visualization."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#demo",
    "href": "slides/1-blockr-user/blockr-user.html#demo",
    "title": "Introduction to blockr for users",
    "section": "Demo",
    "text": "Demo\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = \"https://bristolmyerssquibb.github.io/webr-repos/\")\n\nlibrary(blockr)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nnew_ggplot_block &lt;- function(col_x = character(), col_y = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data)\n\n  new_block(\n    fields = list(\n      x = new_select_field(col_x, data_cols, type = \"name\"),\n      y = new_select_field(col_y, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      ggplot(mapping = aes(x = .(x), y = .(y)))\n    ),\n    class = c(\"ggplot_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_geompoint_block &lt;- function(color = character(), shape = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data$data)\n\n  new_block(\n    fields = list(\n      color = new_select_field(color, data_cols, type = \"name\"),\n      shape = new_select_field(shape, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      geom_point(aes(color = .(color), shape = .(shape)), size = 2)\n    ),\n    class = c(\"plot_layer_block\", \"plot_block\"),\n    ...\n  )\n}\n\nset_workspace(\n  data = new_stack(\n    data_block = new_dataset_block(\"penguins\", \"palmerpenguins\"),\n    filter_block = new_filter_block(\"sex\", \"female\", submit = TRUE)\n  )\n)\nserve_workspace()"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#how-much-code-would-it-take-with-shiny",
    "href": "slides/1-blockr-user/blockr-user.html#how-much-code-would-it-take-with-shiny",
    "title": "Introduction to blockr for users",
    "section": "How much code would it take with Shiny?",
    "text": "How much code would it take with Shiny?\n\n\n\nlibrary(shiny)\nlibrary(bslib)\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\nshinyApp(\n  ui = page_fluid(\n    layout_sidebar(\n      sidebar = sidebar(\n        radioButtons(\"sex\", \"Sex\", unique(penguins$sex), \"female\"),\n        selectInput(\n          \"xvar\", \n          \"X var\", \n          colnames(dplyr::select(penguins, where(is.numeric))),\n          \"body_mass_g\"\n        ),\n        selectInput(\n          \"yvar\",\n          \"Y var\",\n          colnames(dplyr::select(penguins, where(is.numeric))),\n          \"flipper_length_mm\"\n        ),\n        selectInput(\n          \"color\",\n          \"Color and shape\",\n          colnames(dplyr::select(penguins, where(is.factor))),\n          \"species\"\n        )\n      ),\n      plotOutput(\"plot\")\n    )\n  ),\n  server = function(input, output, session) {\n    output$plot &lt;- renderPlot({\n      penguins |&gt;\n        filter(sex == !!input$sex) |&gt;\n        ggplot(aes(x = !!input$xvar, y = !!input$yvar)) +\n        geom_point(aes(color = !!input$color, shape = !!input$color), size = 2)\n    })\n  }\n)"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#its-much-easier-with-blockr",
    "href": "slides/1-blockr-user/blockr-user.html#its-much-easier-with-blockr",
    "title": "Introduction to blockr for users",
    "section": "It‚Äôs much easier with blockr",
    "text": "It‚Äôs much easier with blockr\n\n\nlibrary(blockr)\n1new_stack(\n2  data_block = new_dataset_block(\"penguins\", \"palmerpenguins\"),\n  filter_block = new_filter_block(\"sex\", \"female\"),\n3  plot_block = new_ggplot_block(\"body_mass_g\", \"flipper_length_mm\"),\n4  layer_block = new_geompoint_block(\"species\", \"species\")\n)\n5serve_stack(stack)\n\n\n1\n\nCreate the stack.\n\n2\n\nImport data.\n\n3\n\nCreate the plot.\n\n4\n\nAdd it a layer.\n\n5\n\nServe a Shiny app."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#connecting-stacks-towards-a-dinner-party",
    "href": "slides/1-blockr-user/blockr-user.html#connecting-stacks-towards-a-dinner-party",
    "title": "Introduction to blockr for users",
    "section": "Connecting stacks: towards a dinner party",
    "text": "Connecting stacks: towards a dinner party"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#the-workspace",
    "href": "slides/1-blockr-user/blockr-user.html#the-workspace",
    "title": "Introduction to blockr for users",
    "section": "The workspace",
    "text": "The workspace\n\n\n\n\n\n\n\n\n\nWorkspace\n\n\ndata\n\n\n‚Ä¶ data\n\n\nStack\n\n\ndata\n\n\ndata\n\n\nBlock 1\n\n\nData: dataset, browser, ‚Ä¶\n\n\nBlock 2\n\n\nTransform block: filter, select ‚Ä¶\n\n\nBlock 3\n\n\nResult/transform: plot, filter, ‚Ä¶\n\n\nStack 2\n\n\ndata\n\n\nTransform\n\n\nStack 1 data\n\n\nStack n\n\n\ndata\n\n\ndata\n\n\nVisualize\n\n\nStack i data\n\n\nTransform\n\n\n\n\n\n\n\n\nCollection of recipes (stacks) to build a dashboard."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#demo-1",
    "href": "slides/1-blockr-user/blockr-user.html#demo-1",
    "title": "Introduction to blockr for users",
    "section": "Demo",
    "text": "Demo"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#how-do-i-create-a-workspace",
    "href": "slides/1-blockr-user/blockr-user.html#how-do-i-create-a-workspace",
    "title": "Introduction to blockr for users",
    "section": "How do I create a workspace?",
    "text": "How do I create a workspace?\n\nlibrary(blockr)\n# Creates an empty workspace\n1set_workspace(\n2  stack_1 = new_stack(),\n  stack_2 = new_stack()\n)\n3serve_workspace(clear = FALSE)\n\n\n1\n\nInitialise.\n\n2\n\nOptional: add stacks.\n\n3\n\nServe Shiny app."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#how-far-can-i-go-with-blockr",
    "href": "slides/1-blockr-user/blockr-user.html#how-far-can-i-go-with-blockr",
    "title": "Introduction to blockr for users",
    "section": "How far can I go with blockr?",
    "text": "How far can I go with blockr?\n\n\n\nFunded by"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#commercial-solutions",
    "href": "slides/1-blockr-user/blockr-user.html#commercial-solutions",
    "title": "Introduction to blockr for users",
    "section": "Commercial solutions",
    "text": "Commercial solutions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense cost üí≤üí≤üí≤.\nNot R specific."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#problem-palmer-penguins-plot",
    "href": "slides/1-blockr-user/blockr-user.html#problem-palmer-penguins-plot",
    "title": "Introduction to blockr for users",
    "section": "Problem: palmer penguins plot",
    "text": "Problem: palmer penguins plot\n\nWhat penguin species has the largest flippers?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow can I produce this plot?\n\n\n\n\nShould I ask my colleagues to develop an interactive app for this?"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#zoom-on-blocks",
    "href": "slides/1-blockr-user/blockr-user.html#zoom-on-blocks",
    "title": "Introduction to blockr for users",
    "section": "Zoom on blocks",
    "text": "Zoom on blocks\n\nBlocks categories: import (data), transform, plot, ‚Ä¶\nProvided by developers (or us)."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#example-transform-blocks",
    "href": "slides/1-blockr-user/blockr-user.html#example-transform-blocks",
    "title": "Introduction to blockr for users",
    "section": "Example: transform blocks",
    "text": "Example: transform blocks\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTransform block\n\n\ninteractivity\n\n\ninteractivity\n\n\nevaluate\n\n\nField 1\n\n\nExpression\n\n\nField 2\n\n\nresult\n\n\nInput data\n\n\nOutput\n\n\n\n\n\n\n\n\nA transform block:\n\nTakes input data.\nExposes interactive input to transform the data (select column, filter rows, ‚Ä¶).\nReturns the transformed data."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#palmer-penguins-with-blockr",
    "href": "slides/1-blockr-user/blockr-user.html#palmer-penguins-with-blockr",
    "title": "Introduction to blockr for users",
    "section": "Palmer penguins with blockr",
    "text": "Palmer penguins with blockr\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = \"https://bristolmyerssquibb.github.io/webr-repos/\")\n\nlibrary(blockr)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nnew_ggplot_block &lt;- function(col_x = character(), col_y = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data)\n\n  new_block(\n    fields = list(\n      x = new_select_field(col_x, data_cols, type = \"name\"),\n      y = new_select_field(col_y, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      ggplot(mapping = aes(x = .(x), y = .(y)))\n    ),\n    class = c(\"ggplot_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_geompoint_block &lt;- function(color = character(), shape = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data$data)\n\n  new_block(\n    fields = list(\n      color = new_select_field(color, data_cols, type = \"name\"),\n      shape = new_select_field(shape, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      geom_point(aes(color = .(color), shape = .(shape)), size = 2)\n    ),\n    class = c(\"plot_layer_block\", \"plot_block\"),\n    ...\n  )\n}\n\nstack &lt;- new_stack(\n  data_block = new_dataset_block(\"penguins\", \"palmerpenguins\"),\n  filter_block = new_filter_block(\"sex\", \"female\", submit = TRUE),\n  plot_block = new_ggplot_block(\"body_mass_g\", \"flipper_length_mm\"),\n  layer_block = new_geompoint_block(\"species\", \"species\")\n)\nserve_stack(stack)"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#zoom-on-blocks-processing-units",
    "href": "slides/1-blockr-user/blockr-user.html#zoom-on-blocks-processing-units",
    "title": "Introduction to blockr for users",
    "section": "Zoom on blocks: processing units",
    "text": "Zoom on blocks: processing units\n\nBlocks categories: import (data), transform data, visualize, ‚Ä¶\nProvided by developers (or us).\n\n\n\n\nDesigned by upklyak / Freepik"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#exercise",
    "href": "slides/1-blockr-user/blockr-user.html#exercise",
    "title": "Introduction to blockr for users",
    "section": "Exercise",
    "text": "Exercise\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = \"https://bristolmyerssquibb.github.io/webr-repos/\")\n\nlibrary(blockr)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nnew_ggplot_block &lt;- function(col_x = character(), col_y = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data)\n\n  new_block(\n    fields = list(\n      x = new_select_field(col_x, data_cols, type = \"name\"),\n      y = new_select_field(col_y, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      ggplot(mapping = aes(x = .(x), y = .(y)))\n    ),\n    class = c(\"ggplot_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_geompoint_block &lt;- function(color = character(), shape = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data$data)\n\n  new_block(\n    fields = list(\n      color = new_select_field(color, data_cols, type = \"name\"),\n      shape = new_select_field(shape, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      geom_point(aes(color = .(color), shape = .(shape)), size = 2)\n    ),\n    class = c(\"plot_layer_block\", \"plot_block\"),\n    ...\n  )\n}\n\nset_workspace(\n  data = new_stack(\n    data_block = new_dataset_block(\"penguins\", \"palmerpenguins\"),\n    filter_block = new_filter_block(\"sex\", \"female\", submit = TRUE)\n  )\n)\nserve_workspace(clear = FALSE)"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#exercise-1",
    "href": "slides/1-blockr-user/blockr-user.html#exercise-1",
    "title": "Introduction to blockr for users",
    "section": "üß™ Exercise 1",
    "text": "üß™ Exercise 1\n\n\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = c(\"https://bristolmyerssquibb.github.io/webr-repos/\", \"https://repo.r-wasm.org\"))\n\nlibrary(blockr)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nnew_ggplot_block &lt;- function(col_x = character(), col_y = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data)\n\n  new_block(\n    fields = list(\n      x = new_select_field(col_x, data_cols, type = \"name\"),\n      y = new_select_field(col_y, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      ggplot(mapping = aes(x = .(x), y = .(y)))\n    ),\n    class = c(\"ggplot_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_geompoint_block &lt;- function(color = character(), shape = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data$data)\n\n  new_block(\n    fields = list(\n      color = new_select_field(color, data_cols, type = \"name\"),\n      shape = new_select_field(shape, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      geom_point(aes(color = .(color), shape = .(shape)), size = 2)\n    ),\n    class = c(\"plot_layer_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_penguins_block &lt;- function(selected = character()) {\n  new_dataset_block(selected, package = \"palmerpenguins\")\n}\n\nregister_blocks(\n  constructor = c(new_penguins_block, new_ggplot_block, new_geompoint_block),\n  name = c(\"penguins block\", \"ggplot block\", \"geompoint block\"),\n  description = c(\n    \"Data from palmerpenguins package\",\n    \"Builds a ggplot object\",\n    \"Add points geom to ggplot object\"\n  ),\n  classes = list(\n    c(\"palmer_penguins\", \"dataset_block\", \"data_block\"),\n    c(\"ggplot_block\", \"plot_block\"),\n    c(\"geompoint_block\", \"plot_layer_block\", \"plot_block\")\n  ),\n  input = c(NA_character_, \"data.frame\", \"ggplot\"),\n  output = c(\"data.frame\", \"ggplot\", \"ggplot\"),\n  package = \"blockr.demo\",\n  category = c(\"custom data\", \"visualisation\", \"visualisation\")\n)\n\nstack &lt;- new_stack()\nserve_stack(stack)\n\nInstructions:\n\nClick on the + button (top right corner).\nAdd a palmer_penguins block. You may search in the list.\nAdd a new filter_block, selecting sex as column and female as value. Click on run.\nAdd a new ggplot_block. Select x and y wizely.\nAdd a new geompoint_block. You may change shape and color.\nYou can remove and re-add blocks as you like ‚Ä¶\nExport the stack code and try to run it."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#exercise-1-solution",
    "href": "slides/1-blockr-user/blockr-user.html#exercise-1-solution",
    "title": "Introduction to blockr for users",
    "section": "üß™ Exercise 1 (solution)",
    "text": "üß™ Exercise 1 (solution)\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = c(\"https://bristolmyerssquibb.github.io/webr-repos/\", \"https://repo.r-wasm.org\"))\n\nlibrary(blockr)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nnew_ggplot_block &lt;- function(col_x = character(), col_y = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data)\n\n  new_block(\n    fields = list(\n      x = new_select_field(col_x, data_cols, type = \"name\"),\n      y = new_select_field(col_y, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      ggplot(mapping = aes(x = .(x), y = .(y)))\n    ),\n    class = c(\"ggplot_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_geompoint_block &lt;- function(color = character(), shape = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data$data)\n\n  new_block(\n    fields = list(\n      color = new_select_field(color, data_cols, type = \"name\"),\n      shape = new_select_field(shape, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      geom_point(aes(color = .(color), shape = .(shape)), size = 2)\n    ),\n    class = c(\"plot_layer_block\", \"plot_block\"),\n    ...\n  )\n}\n\nstack &lt;- new_stack(\n  data_block = new_dataset_block(\"penguins\", \"palmerpenguins\"),\n  filter_block = new_filter_block(\"sex\", \"female\", submit = TRUE),\n  plot_block = new_ggplot_block(\"body_mass_g\", \"flipper_length_mm\"),\n  layer_block = new_geompoint_block(\"species\", \"species\")\n)\nserve_stack(stack)"
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#exercise-2",
    "href": "slides/1-blockr-user/blockr-user.html#exercise-2",
    "title": "Introduction to blockr for users",
    "section": "üß™ Exercise 2",
    "text": "üß™ Exercise 2\n\n\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = c(\"https://bristolmyerssquibb.github.io/webr-repos/\", \"https://repo.r-wasm.org\"))\n\nlibrary(blockr)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nnew_ggplot_block &lt;- function(col_x = character(), col_y = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data)\n\n  new_block(\n    fields = list(\n      x = new_select_field(col_x, data_cols, type = \"name\"),\n      y = new_select_field(col_y, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      ggplot(mapping = aes(x = .(x), y = .(y)))\n    ),\n    class = c(\"ggplot_block\", \"plot_block\"),\n    ...\n  )\n}\n\nnew_geompoint_block &lt;- function(color = character(), shape = character(), ...) {\n\n  data_cols &lt;- function(data) colnames(data$data)\n\n  new_block(\n    fields = list(\n      color = new_select_field(color, data_cols, type = \"name\"),\n      shape = new_select_field(shape, data_cols, type = \"name\")\n    ),\n    expr = quote(\n      geom_point(aes(color = .(color), shape = .(shape)), size = 2)\n    ),\n    class = c(\"plot_layer_block\", \"plot_block\"),\n    ...\n  )\n}\n\nregister_blocks(\n  constructor = c(new_ggplot_block, new_geompoint_block),\n  name = c(\"ggplot block\", \"geompoint block\"),\n  description = c(\n    \"Builds a ggplot object\",\n    \"Add points geom to ggplot object\"\n  ),\n  classes = list(\n    c(\"ggplot_block\", \"plot_block\"),\n    c(\"geompoint_block\", \"plot_layer_block\", \"plot_block\")\n  ),\n  input = c(\"data.frame\", \"ggplot\"),\n  output = c(\"ggplot\", \"ggplot\"),\n  package = \"blockr.demo\",\n  category = c(\"visualisation\", \"visualisation\")\n)\n\nset_workspace(\n  data = new_stack(\n    data_block = new_dataset_block(\"penguins\", \"palmerpenguins\")\n  )\n)\nserve_workspace(clear = FALSE)\n\nInstructions:\n\nClick on Add stack.\nFrom the new stack: click on + to add a new result_block.\nAdd a new filter_block to stack 1, with sex as column and female as value.\nNotice how the result of the second stack changes.\nAdd a new ggplot_block.\nAdd a new geom_point block."
  },
  {
    "objectID": "slides/1-blockr-user/blockr-user.html#exercise-3-pharma-data",
    "href": "slides/1-blockr-user/blockr-user.html#exercise-3-pharma-data",
    "title": "Introduction to blockr for users",
    "section": "üß™ Exercise 3: pharma data",
    "text": "üß™ Exercise 3: pharma data\n\n\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| column: screen-inset-shaded\n#| viewerHeight: 800\nwebr::install(\"blockr\", repos = c(\"https://bristolmyerssquibb.github.io/webr-repos/\", \"https://repo.r-wasm.org\"))\nwebr::install(\"blockr.data\", repos = c(\"https://bristolmyerssquibb.github.io/webr-repos/\", \"https://repo.r-wasm.org\"))\nwebr::install(\"blockr.ggplot2\", repos = c(\"https://bristolmyerssquibb.github.io/webr-repos/\", \"https://repo.r-wasm.org\"))\n\nlibrary(blockr)\nlibrary(blockr.ggplot2)\n\nblockr.ggplot2:::register_ggplot_blocks(\"blockr.ggplot2\")\n\nnew_customdata_block &lt;- function(selected = character()) {\n  new_dataset_block(selected, package = \"blockr.data\")\n}\n\nregister_blocks(\n  constructor = c(new_customdata_block, new_ggplot_block, new_geomhistogram_block, new_theme_block),\n  name = c(\"customdata block\", \"ggplot2 block\", \"geom histogram block\", \"theme block\"),\n  description = c(\n    \"Data from CDISC package\",\n    \"ggplot object\",\n    \"ggplot histogram layer\",\n    \"ggplot theme layer\"\n  ),\n  classes = list(\n    c(\"customdata_block\", \"dataset_block\", \"data_block\"),\n    c(\"ggplot_block\", \"plot_block\"),\n    c(\"geomhistogram_block\", \"plot_layer_block\", \"plot_block\"),\n    c(\"theme_block\", \"plot_layer_block\", \"plot_block\")\n  ),\n  input = c(NA_character_, \"data.frame\", \"ggplot\", \"ggplot\"),\n  output = c(\"data.frame\", \"ggplot\", \"ggplot\", \"ggplot\"),\n  package = \"blockr.demo\",\n  category = c(\"custom data\", \"visualization\", \"visualization\", \"visualization\")\n)\n\nstack &lt;- new_stack()\nserve_stack(stack)\n\nInstructions:\nObjectives: distribution of age in demo dataset.\n\nAdd a new_customdata_block with demo as selected dataset.\nAdd a new_ggplot_block with x as func and AGE as default_columns.\nAdd a new_geomhistogram_block.\nAdd a new_theme_block."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#todays-mission",
    "href": "slides/2-blockr-dev/blockr-dev.html#todays-mission",
    "title": "Introduction to blockr for developers",
    "section": "Today‚Äôs mission",
    "text": "Today‚Äôs mission\nCreate a new cardinal1 block:\ncardinal::make_table_09_gtsum\n\n\ncode: https://github.com/pharmaverse/cardinal/blob/main/R/fda-table_09.R#L375"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-14",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-14",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: lm block 1/4",
    "text": "Create new blocks: lm block 1/4\n\n\n1new_lm_block &lt;- function(y = character(), predictor = character(), ...) {\n\n}\n\n\n1\n\nCreate the constructor."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-24",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-24",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: lm block 2/4",
    "text": "Create new blocks: lm block 2/4\n\n\nnew_lm_block &lt;- function(y = character(), predictor = character(), ...) {\n\n2  all_cols &lt;- function(data) colnames(data)\n\n3  fields &lt;- list(\n    y = new_select_field(y, all_cols, type = \"name\"),\n    predictor = new_select_field(predictor, all_cols, type = \"name\")\n  )\n\n  new_block(\n    fields = fields,\n\n  )\n}\n\n\n2\n\nConstruct columns dynamically.\n\n3\n\nAdd field(s): y and predictor columns (type allows to pass in cols as name instead of strings.)"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-34",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-34",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: lm block 3/4",
    "text": "Create new blocks: lm block 3/4\n\n\nnew_lm_block &lt;- function(y = character(), predictor = character(), ...) {\n\n  all_cols &lt;- function(data) colnames(data)\n\n  fields &lt;- list(\n    y = new_select_field(y, all_cols, type = \"name\"),\n    predictor = new_select_field(predictor, all_cols, type = \"name\")\n  )\n\n  new_block(\n    fields = fields,\n4    expr = quote({\n      model &lt;- lm(data = data, formula = .(y) ~ .(predictor))\n      broom::tidy(model)\n    }),\n\n  )\n}\n\n\n4\n\nProvide expression: use quote and pass field name with .(field_name). 1\n\n\n\n\n\nNeeded by bquote for partial substitution."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-44",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-lm-block-44",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: lm block 4/4",
    "text": "Create new blocks: lm block 4/4\n\n\nnew_lm_block &lt;- function(y = character(), predictor = character(), ...) {\n\n  all_cols &lt;- function(data) colnames(data)\n\n  fields &lt;- list(\n    y = new_select_field(y, all_cols, type = \"name\"),\n    predictor = new_select_field(predictor, all_cols, type = \"name\")\n  )\n\n  new_block(\n    fields = fields,\n    expr = quote({\n      model &lt;- lm(data = data, formula = .(y) ~ .(predictor))\n      broom::tidy(model)\n    }),\n    ...,\n    class = c(\"lm_block\", \"transform_block\")\n  )\n}\n\n\nGive it the correct classes: transform_block + a custom class."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#testing-our-new-block",
    "href": "slides/2-blockr-dev/blockr-dev.html#testing-our-new-block",
    "title": "Introduction to blockr for developers",
    "section": "Testing our new block",
    "text": "Testing our new block"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#how-do-we-make-custom-blocks-available-to-users",
    "href": "slides/2-blockr-dev/blockr-dev.html#how-do-we-make-custom-blocks-available-to-users",
    "title": "Introduction to blockr for developers",
    "section": "How do we make custom blocks available to users?",
    "text": "How do we make custom blocks available to users?"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#the-registry-the-blocks-supermarket",
    "href": "slides/2-blockr-dev/blockr-dev.html#the-registry-the-blocks-supermarket",
    "title": "Introduction to blockr for developers",
    "section": "The registry: the blocks supermarket",
    "text": "The registry: the blocks supermarket\n\n\n\n\n\n\n\n\n\n\n\nregister\n\n\n\nregister\n\n\n\nRegistry\n\n\n\nunregister\n\n\n\nSelect block\n\n\n\nName: select block\n\n\n\nDescription: select columns in a table\n\n\n\nClasses: select_block, tranform_block\n\n\n\nInput: data.frame\n\n\n\nOutput: data.frame\n\n\n\nPackage: blockr\n\n\n\nFilter block\n\n\n\n\n\n\n\nblockr.echarts4r\n\n\n\nNew block\n\n\n\nNew block\n\n\n\nblockr.ggplot2\n\n\n\nNew block\n\n\n\nNew block\n\n\n\n\n\n\n\n\n\n\nInformation about blocks.\nShared between block packages."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#filling-the-supermarket-with-block",
    "href": "slides/2-blockr-dev/blockr-dev.html#filling-the-supermarket-with-block",
    "title": "Introduction to blockr for developers",
    "section": "Filling the supermarket with block",
    "text": "Filling the supermarket with block\n\nregister_lm_block &lt;- function(pkg) {\n  register_block(\n    constructor = new_cardinal09_block,\n    name = \"cardinal09 block\",\n    description = \"Create a cardinal09 block\",\n    classes = c(\"cardinal09_block\", \"transform_block\"),\n    input = \"data.frame\",\n    output = \"gt\",\n    package = pkg\n  )\n}\n\n# Put in zzz.R\n.onLoad &lt;- function(libname, pkgname) {\n  register_lm_block(pkgname)\n  invisible(NULL)\n}\n\n\n\n\nFunded by"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#customize-blockr",
    "href": "slides/2-blockr-dev/blockr-dev.html#customize-blockr",
    "title": "Introduction to blockr for developers",
    "section": "Customize blockr",
    "text": "Customize blockr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlock generic\n\n\n\nData block method\n\n\n\nPlot block method\n\n\n\nTransform block method\n\n\n\n\n\n\n\n\n\nS3 OO system1: customize behavior depending on object class.\n\n\n\n\nFunded by \n\n\nS3 Object Oriented system https://adv-r.hadley.nz/s3.html"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-14",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-14",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: cardinal block 1/4",
    "text": "Create new blocks: cardinal block 1/4\n\n\n1new_cardinal09_block &lt;- function(\n2  id_var = \"USUBJID\",\n  arm_var = \"ARM\",\n  saffl_var = \"SAFFL\",\n  pref_var = \"AEDECOD\",\n  show_colcounts = TRUE,\n  ...) {\n\n}\n\n\n1\n\nCreate the constructor.\n\n2\n\nSelect parameters to expose as interactive inputs."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-24",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-24",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: cardinal block 2/4",
    "text": "Create new blocks: cardinal block 2/4\n\n\nnew_cardinal09_block &lt;- function(\n  id_var = \"USUBJID\",\n  arm_var = \"ARM\",\n  saffl_var = \"SAFFL\",\n  pref_var = \"AEDECOD\",\n  show_colcounts = TRUE,\n  ...) {\n\n3  all_cols &lt;- function(data) colnames(data)\n\n4  fields &lt;- list(\n    id_var = new_select_field(id_var, all_cols, title = \"ID\"),\n    arm_var = new_select_field(arm_var, all_cols, title = \"ARM\"),\n    saffl_var = new_select_field(saffl_var, all_cols, title = \"SAFFL\"),\n    pref_var = new_select_field(pref_var, all_cols, title = \"Pref\"),\n    show_colcounts = new_switch_field(show_colcounts, title = \"Show column counts\")\n  )\n\n  new_block(\n    fields = fields,\n\n  )\n}\n\n\n3\n\nConstruct columns dynamically.\n\n4\n\nAdd field(s) for interactivity. (Note: type allows to pass in cols as name instead of strings.)"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-34",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-34",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: cardinal block 3/4",
    "text": "Create new blocks: cardinal block 3/4\n\n\nnew_cardinal09_block &lt;- function(\n  id_var = \"USUBJID\",\n  arm_var = \"ARM\",\n  saffl_var = \"SAFFL\",\n  pref_var = \"AEDECOD\",\n  show_colcounts = TRUE,\n  ...) {\n\n  all_cols &lt;- function(data) colnames(data)\n\n  fields &lt;- list(\n    id_var = new_select_field(id_var, all_cols, title = \"ID\"),\n    arm_var = new_select_field(arm_var, all_cols, title = \"ARM\"),\n    saffl_var = new_select_field(saffl_var, all_cols, title = \"SAFFL\"),\n    pref_var = new_select_field(pref_var, all_cols, title = \"Pref\"),\n    show_colcounts = new_switch_field(show_colcounts, title = \"Show column counts\")\n  )\n\n  new_block(\n    fields = fields,\n5    expr = quote({\n      cardinal::make_table_09_gtsum(\n        adae = data,\n        arm_var = .(arm_var),\n        saffl_var = .(saffl_var),\n        id_var = .(id_var),\n        pref_var = .(pref_var),\n        show_colcounts = .(show_colcounts)\n      )\n    })\n  )\n}\n\n\n5\n\nProvide expression: use quote and pass field name with .(field_name). 1\n\n\n\n\n\nNeeded by bquote for partial substitution."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-44",
    "href": "slides/2-blockr-dev/blockr-dev.html#create-new-blocks-cardinal-block-44",
    "title": "Introduction to blockr for developers",
    "section": "Create new blocks: cardinal block 4/4",
    "text": "Create new blocks: cardinal block 4/4\n\n\nnew_cardinal09_block &lt;- function(\n  id_var = \"USUBJID\",\n  arm_var = \"ARM\",\n  saffl_var = \"SAFFL\",\n  pref_var = \"AEDECOD\",\n  show_colcounts = TRUE,\n  ...) {\n\n  all_cols &lt;- function(data) colnames(data)\n\n  fields &lt;- list(\n    id_var = new_select_field(id_var, all_cols, title = \"ID\"),\n    arm_var = new_select_field(arm_var, all_cols, title = \"ARM\"),\n    saffl_var = new_select_field(saffl_var, all_cols, title = \"SAFFL\"),\n    pref_var = new_select_field(pref_var, all_cols, title = \"Pref\"),\n    show_colcounts = new_switch_field(show_colcounts, title = \"Show column counts\")\n  )\n\n  new_block(\n    fields = fields,\n    expr = quote({\n      cardinal::make_table_09_gtsum(\n        adae = data,\n        arm_var = .(arm_var),\n        saffl_var = .(saffl_var),\n        id_var = .(id_var),\n        pref_var = .(pref_var),\n        show_colcounts = .(show_colcounts)\n      )\n    }),\n    ...,\n    class = c(\"cardinal09_block\")\n  )\n}\n\n\nGive it the correct classes: as we don‚Äôt get data out of it, we can‚Äôt call it transform_block."
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#why-does-this-fail",
    "href": "slides/2-blockr-dev/blockr-dev.html#why-does-this-fail",
    "title": "Introduction to blockr for developers",
    "section": "Why does this fail?",
    "text": "Why does this fail?"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#about-blockr-classes",
    "href": "slides/2-blockr-dev/blockr-dev.html#about-blockr-classes",
    "title": "Introduction to blockr for developers",
    "section": "About blockr classes",
    "text": "About blockr classes\n\n\n%%| mermaid-format: svg\nflowchart LR\n  block_generic[Block generic] --&gt; data_block_method[Data block method]\n  block_generic --&gt; transform_block_method[Transform block method]\n  block_generic --&gt; plot_block_method[Plot block method]\n\nS3 OO system1: customize behavior depending on object class.\n\nS3 Object Oriented system https://adv-r.hadley.nz/s3.html"
  },
  {
    "objectID": "slides/2-blockr-dev/blockr-dev.html#adding-missing-pieces",
    "href": "slides/2-blockr-dev/blockr-dev.html#adding-missing-pieces",
    "title": "Introduction to blockr for developers",
    "section": "Adding missing pieces",
    "text": "Adding missing pieces\n\nWe need a function that renders gt outputs (server and ui side).\nWe need a server method for cardinal09_block. We can inherit the transform block one.\n\ngenerate_server.cardinal09_block &lt;- blockr:::generate_server.\ntransform_block\n\nuiOutputBlock.cardinal09_block &lt;- function(x, ns) {\n  gt::gt_output(ns(\"res\"))\n}\n\nserver_output.cardinal09_block &lt;- function(x, result, output) {\n  gt::render_gt(result())\n}"
  }
]